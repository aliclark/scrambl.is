
* Add an /about link so people have some context

* Should we be hiding elements or showing a more specialised UI when
   arriving from a /read/ or /write/ link?

* Now is a good time to consider adding some judicious use of help hints

* Is a tabbed UI a good thing? May put an extra click between
   regular users and their intended action. May make the first visit
   less disorientating. Might be more amenable to help text.

* HTTPS everywhere (it's been submitted for Chrome preload inclusion)

* Should we be emailing links instead of ct? Plain ct is better
   from a traffic analysis point of view. Link is probably more
   approachable for normal users

* Would TweetNacl-js authors like the copy globals patch?

* Tidy up the code, deduplicate concepts, make it more Pro.

* Some amount of testing, but never compromising readability or
   good black boxing and safety features to do so

* Use a stripped down version of bootstrap? Minify the style.css?

* Shits and giggles: loop over secret key with random bytes at page
   load. Consider generating random passphrases and keys as chaff.

* markdown/formatting?
   a) Full markdown, with previews or wysiwyg
   b) Markdown rendering but composed in plain, possibly with preview
   c) Linkify links, potentially italicise or bolden but nothing else
   d) status quo

   -- Thougts: Most people get by on Facebook/Twitter with yet another
   essentially no formatting. GUIs are annoying and
   distracting. Formatting is powerful. Formatting can happen
   mistakenly. Links are good. GUI/markdown may be costly in size and
   review time.

* local-storage for recipient->pubkey mapping? this is another way of
   -- less important with the shareable links
   -- watch out for /write/ links containing false keys.
   -- what to do if the key already exists?

* allow Upload file button and check file magic to
   offer file download on return. Or eg. reserve max padding
   size to mean eg. "is multipart email" and try to parse
   multipart stuff.
   -- there probably isn't much value-add over miniLock or onion-share if
   they can use one of those (and hopefully they will).

* Could have a button to upload ciphertext to server
   and provide a short URL like
   https://scrambl.is/read/SYjjjGRPa4zOCjw3SUlJ but would
   require development time for implementation and DOS
   protection. A link expiry of 1 week would help, but needs
   to be clear that is the case.
